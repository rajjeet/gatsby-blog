// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CodeSnippet /> should render 1`] = `
<DocumentFragment>
  .c4 {
  margin-right: .5em;
}

.c0 {
  background-color: rgba(33,133,208,.1);
  border-radius: 5px;
}

.c2 {
  font-family: Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;
}

.c3 {
  background-color: white;
  border: none;
  padding: .5em 1em;
  border-radius: 5px;
}

.c1 {
  padding: .5rem .5rem 0 1rem;
  border-radius: 5px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<div
    class="c0"
  >
    <div
      class="c1"
    >
      <span
        class="c2"
      >
        index.js
      </span>
      <button
        class="c3"
        data-clipboard-text="
const mainReducer = (state, action) => {
  console.log('Before', state);
  console.log('Action', action);
  let result = {
    count: countReducer(state.count, action)      
  };
  console.log('After', result);
  return result
};      
"
        title=""
        type="button"
      >
        <span
          class="c4"
        >
          Copy
        </span>
        <svg
          aria-hidden="true"
          class="svg-inline--fa fa-clipboard fa-w-12 "
          data-icon="clipboard"
          data-prefix="fas"
          focusable="false"
          role="img"
          viewBox="0 0 384 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z"
            fill="currentColor"
          />
        </svg>
      </button>
    </div>
    <pre
      class=""
    >
      <code
        class="language-javascript"
      >
        
const mainReducer = (state, action) =&gt; {
  console.log('Before', state);
  console.log('Action', action);
  let result = {
    count: countReducer(state.count, action)      
  };
  console.log('After', result);
  return result
};      

      </code>
    </pre>
  </div>
</DocumentFragment>
`;
